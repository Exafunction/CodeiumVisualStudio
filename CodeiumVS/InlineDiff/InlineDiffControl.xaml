<UserControl x:Class="CodeiumVs.InlineDiff.InlineDiffControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0" 
             xmlns:platform="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:toolkit="clr-namespace:Community.VisualStudio.Toolkit;assembly=Community.VisualStudio.Toolkit"
             xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
             xmlns:imagecatalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog" 
             
             toolkit:Themes.UseVsTheme="True"
             mc:Ignorable="d"
             d:DesignWidth="800"
             d:DesignHeight="400"
             DataContext="{Binding RelativeSource={RelativeSource Self}}"
             Background="Transparent"
             Name="InlineDiffControl_">

    <UserControl.Resources>
        <ResourceDictionary>
            <!-- 
            To customize a style provided by the toolkit, you need to make the resources 
            available by including the resource dictionary from the toolkit:
            -->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="{x:Static toolkit:ToolkitResourceKeys.ThemeResourcesUri}"/>
            </ResourceDictionary.MergedDictionaries>

            <!--
            The toolkit only defines a few customized styles. Most styles come from the default Visual Studio
            styles. These can be referenced using the keys from `Microsoft.VisualStudio.Shell.VsResourceKeys`.
            -->
            <Style x:Key="AcceptButton" TargetType="Button" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogButtonStyleKey}}">
                <Setter Property="Background" Value="{DynamicResource {x:Static platform:CommonControlsColors.ButtonDefaultBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource {x:Static platform:ThemedDialogColors.ActionButtonStrokeHoverBrushKey}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Margin="0">
        <StackPanel Orientation="Vertical">
            <Grid x:Name="DiffContent" >
                <Border x:Name="ContentBorder" BorderBrush="{DynamicResource {x:Static platform:EnvironmentColors.SystemHighlightBrushKey}}" BorderThickness="1">
                </Border>
            </Grid>

            <Grid HorizontalAlignment="Left">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="ButtonColumn1" Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" HorizontalAlignment="Right" Cursor="Arrow" Click="ButtonReject_Click">
                    <TextBlock>
                        <imaging:CrispImage Margin="0,0,3,-3" Moniker="{x:Static imagecatalog:KnownMonikers.Close}" />
                        Reject
                    </TextBlock>
                </Button>

                <Button Grid.Column="1" HorizontalAlignment="Left" Cursor="Arrow" Click="ButtonAccept_Click" Style="{StaticResource AcceptButton}" >
                    <TextBlock>
                        <imaging:CrispImage Margin="0,0,3,-3" Moniker="{x:Static imagecatalog:KnownMonikers.Checkmark}" />
                        Accept
                    </TextBlock>


                </Button>
            </Grid>
        </StackPanel>
    </Grid>
</UserControl>